一、动态路由
		1. 文章article/template/page下面所有页面能够访问，可支持4级路径（多的路径暂时不考虑）
		2. 默认index 可以不加index直接访问  比如：/article 可以直接访问 结果和/article/index 一样

二、主题
		1. 支持多套主题
		2. 主题存放到wwwroot/templates下面
		3. 示例
				比如访问链接：/article/view
						如果当前主题theme01下面存在文件： /wwwroot/templates/theme01/article/view.cshtml 则访问改文件
						否则访问：插件文章详情页默认视图是~/app/article/templates/page/view.cshtml页面 


		
三、文章模块演示数据 （不考虑样式，只实现功能）
		1. 文章添加与编辑 /article/admin/add，要求如下：
			a. 使用API绑定数据，不使用ViewModel,性能最优化,代码最少化
			b. 文章详情使用 百度编辑器 http://ueditor.baidu.com/website/ ，引入的文件放到/wwwroot/static 下面
			c. 文章缩略图 存放到/wwwroot/upload/article/{id}/ 下面，文件名用guid.重新命名
			d. 枚举ArticleStates，使用单选框
			e. 文章分类ClassId 使用下拉框，支持级联多级分类(目前分类功能，还没有实现，可以往数据表GenericClass手动插入几条数据)
			f. 标题必填，长度60个字符
			g. 浏览次数 ViewCount ，必须为大于0的正数
			i. 尽可能的使用TagHelper ,自定义TagHelper写到 /ZKCloud/Web/Mvc/Dynamic/TagHelpers下
			k. 数据前端验证，后端验证（可以用动态ViewModel模式实现，也可以通过其他方式）,安全处理
			l. 示例格式如下：（未必此种方式，实现的时候，完全需要加入自己的思路，让代码最少化）
				<form asp-form-api="/article/addsngile">
						<div class="form-group">
							<label asp-for="Email" class="col-md-2 control-label"></label>
							<div class="col-md-10">
								<input asp-for="Email" class="form-control" />
								<span asp-validation-for="Email" class="text-danger"></span>
							</div>
						</div>
				</form>

		2. 后台文章列表页面面/article/admin/index
			a. 使用API绑定数据，不使用ViewModel,性能最优化,代码最少化
			b. 按照平面图实现功能（多标签[所有文章、未发布、已发布、回收站]，分页等功能）
			g. 实现简单的批量操作功能（批量删除、批量恢复、批量修改浏览数)
			e. 实现的时候可参考和借鉴 object-table的思想 http://ekokotov.github.io/object-table/ 
		
		3. 前台文章详情页/article/view
			a. 使用API绑定数据，不使用ViewModel,性能最优化,代码最少化
			b. 显示标题，和文章详情即可
		
		4. 前台列表页 /article/list
			a. 使用API绑定数据，不使用ViewModel,性能最优化,代码最少化
			b. 显示文章标题列表，实现分页即可
		
		
额外要求：
		1. 因为开源，所以代码尽可能的优雅
		2. 遵守ZKCloud原则"业务实现代码最少化"，所以要做到代码尽可能的少
		3. 性能优化
		4. 如果有更好的设计思路，一定不要保留，可以加QQ2839018一起探讨
		5. 功能的实现无需考虑前端样式，我们有专门的前端随时配和您

参考资料：
		1. 解读ASP.NET 5 & MVC6系列（13）：TagHelper  http://www.cnblogs.com/TomXu/p/4496480.html 
		2. 解读ASP.NET 5 & MVC6系列  http://www.cnblogs.com/TomXu/p/4496545.html
		3. object-table 快速绑定数据：http://ekokotov.github.io/object-table/ 
		4. 开源软件 使用TagHelper 实现分页：https://github.com/joeaudette/cloudscribe.Web.Pagination
		5. Github上的TagHelper资料：https://github.com/search?utf8=✓&q=taghelper
		6. 主题实现参考：http://www.cnblogs.com/TomXu/p/4496502.html